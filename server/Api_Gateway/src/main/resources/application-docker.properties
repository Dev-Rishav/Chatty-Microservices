# Docker Configuration for Local Development
spring.application.name=api-gateway

# Server Configuration
server.port=${PORT:8081}

# Eureka Configuration
eureka.client.service-url.defaultZone=${EUREKA_URL:http://localhost:8761/eureka}
eureka.instance.instance-id=${spring.application.name}:${spring.application.instance_id:${random.value}}
eureka.instance.hostname=${HOSTNAME:localhost}
eureka.instance.prefer-ip-address=false

# Gateway Configuration
spring.cloud.gateway.globalcors.cors-configurations.'[/**]'.allowedOrigins=${ALLOWED_ORIGINS:http://localhost:3000,http://localhost:5173}
spring.cloud.gateway.globalcors.cors-configurations.'[/**]'.allowedMethods=GET,POST,PUT,DELETE,OPTIONS
spring.cloud.gateway.globalcors.cors-configurations.'[/**]'.allowedHeaders=*
spring.cloud.gateway.globalcors.cors-configurations.'[/**]'.allowCredentials=true

# Logging Configuration
logging.level.org.springframework.cloud.gateway=DEBUG
logging.level.org.springframework.web.cors=DEBUG

# Actuator Configuration
management.endpoints.web.exposure.include=health,info,metrics,env
management.endpoint.health.show-details=always
management.endpoint.health.probes.enabled=true
management.health.livenessstate.enabled=true
management.health.readinessstate.enabled=true

# Development friendly settings
server.error.include-stacktrace=always
server.error.include-message=always
