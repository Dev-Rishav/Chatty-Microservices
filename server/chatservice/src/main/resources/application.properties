spring.application.name=chatservice


#Port
server.port=8085

#JWT key
jwt.secret=fYekcW1cF7V3tBBr+ehA4BrwhqNCq0S5XSIZ2cPi0kI=


#Eureka
eureka.client.service-url.defaultZone = http://localhost:8761/eureka
eureka.instance.instance-id=${spring.application.name}:${spring.application.instance_id:${random.value}}


#Grpc Client
spring.grpc.client.channels.user.address=localhost:9094
spring.grpc.client.channels.user.negotiationType=PLAINTEXT

spring.grpc.client.channels.auth.address=localhost:9093
spring.grpc.client.channels.auth.negotiationType=PLAINTEXT

spring.grpc.client.channels.contact.address=localhost:9096
spring.grpc.client.channels.contact.negotiationType=PLAINTEXT

#postgres dependencies
spring.jpa.hibernate.ddl-auto=update
spring.datasource.url=jdbc:postgresql://localhost:5432/chatty_microservices
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql=true

# HikariCP Connection Pool Configuration
spring.datasource.hikari.maximum-pool-size=30
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=600000
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.validation-timeout=5000
spring.datasource.hikari.leak-detection-threshold=60000
spring.datasource.hikari.connection-test-query=SELECT 1
spring.datasource.hikari.auto-commit=false

# JPA/Hibernate Transaction Management
spring.jpa.properties.hibernate.connection.provider_disables_autocommit=true
spring.jpa.properties.hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_RELEASE_AFTER_TRANSACTION


#cloudinary
cloudinary.cloud_name=djkuu00yc
cloudinary.api_key=982317337939277
cloudinary.api_secret=S_BXKUTeFUZaXQYnx8nDD0EIVbY

#kafka
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=chatservice
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

#redis
spring.data.redis.host=localhost
spring.data.redis.port=6379
spring.data.redis.timeout=60000ms
spring.data.redis.database=1



